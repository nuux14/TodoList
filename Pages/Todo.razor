@page "/todo"
@inject TodoDbService TodoService

<h3>Todo</h3> 
<ul>
    @foreach(var item in todos){
        <li>  
            <input id="iscomplete" type="checkbox" @bind="item.IsDone" />
            <span style='text-decoration:@(item.IsDone?"line-through":"none")'> @item.Title </span>
           <span id="cancel"  @onclick="()=> RemoveTask(item.Title)">X</span> 
        </li>
    }
</ul>

<h3>Todo @todos.Count(todo => !todo.IsDone)</h3>
 
 <h4> Add To do item</h4>
 <input @bind="newTodo" placeholder="Add a task" />
 
 <button @onclick="AddItem">Add Task</button>

@code {
    private string? newTodo;
    private List<TodoItem> todos {get;set;} = new();

        protected override void OnInitialized()
        {
            base.OnInitialized();
            todos = TodoService.GetTodoList();
        }
        void AddItem(){
       if(!string.IsNullOrWhiteSpace(newTodo)){
        TodoService.AddTodo( new TodoItem{ Title = newTodo});
        todos = TodoService.GetTodoList();
         newTodo = string.Empty;
       }
    }
    void RemoveTask(string title){
        TodoItem it = todos.FirstOrDefault(t=>t.Title == title);
        todos.Remove(it);
    }
    }



@* 
Component
Page

Component + Page

 *@



